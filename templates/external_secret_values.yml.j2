# Default values for kubernetes-external-secrets.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Environment variables to set on deployment pod
env:
  AWS_REGION: {{ esecret_region }}
  POLLER_INTERVAL_MILLISECONDS: 10000  # Caution, setting this frequency may incur additional charges on some platforms
  LOG_LEVEL: info
  METRICS_PORT: 3001
  VAULT_ADDR: http://127.0.0.1:8200
#  GOOGLE_APPLICATION_CREDENTIALS: /app/gcp-creds/gcp-creds.json

# Create environment variables from existing k8s secrets
envVarsFromSecret:
 AWS_ACCESS_KEY_ID:
   secretKeyRef: aws-credentials
   key: id
 AWS_SECRET_ACCESS_KEY:
   secretKeyRef: aws-credentials
   key: key
#  AZURE_TENANT_ID:
#    secretKeyRef: azure-credentials
#    key: tenantid
#  AZURE_CLIENT_ID:
#    secretKeyRef: azure-credentials
#    key: clientid
#  AZURE_CLIENT_SECRET:
#    secretKeyRef: azure-credentials
#    key: clientsecret

# Create files from existing k8s secrets
# filesFromSecret:
#   gcp-creds:
#     secret: gcp-creds
#     mountPath: /app/gcp-creds

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Specifies annotations for this service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

replicaCount: {{ esecret_replicas }}

image:
  repository: godaddy/kubernetes-external-secrets
  tag: 3.3.0
  pullPolicy: IfNotPresent
  imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podLabels:
  application: external-secrets

securityContext:
  runAsNonRoot: true
  # Required for use of IRSA, see https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html
  # fsGroup: 65534

resources:
   limits:
     cpu: "1"
     memory: 2Gi
   requests:
     cpu: 100m
     memory: 128Mi

nodeSelector:
  node-role.kubernetes.io/{{ esecret_nodeselector }}: ""

tolerations: []

affinity: {}

serviceMonitor:
  enabled: false
  interval: "30s"
  namespace:

secret:
  name: aws-credentials

